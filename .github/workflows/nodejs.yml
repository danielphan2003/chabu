# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    types: [ opened ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [10.x, 12.x]

    steps:
    - continue-on-error: true

    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test

    - name: Return
      id: return
      if: always()
      run: |
        echo ::set-output name=success::${{ success() }}
    
    env:
      CI: true
      
  notify:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Setup
      id: setup
      if: always()
      run: |
        event="UNSPECIFIED"
        event_alt="unspecified"

        case "${{ github.event }}" in
          "pull_request") 
            event="PR"
            event_alt="PR"
            ;;
          "issues") 
            event="ISSUE" 
            event_alt="issue"
            ;;
        esac

        base_url="https://github.com/${{ github.repository }}"
        event_number=$(echo ${{ github.ref }} | sed -n 's,.*/\([0-9]*\)/.*,\1,')
        ! [[ $event_number ]] \
          && event_number=${{ github.event.issue.number }} \
          && event_url="$base_url/pr/$event_number"
        ! [[ $event_url ]] && event_url="$base_url/issues/$event_number"

        event_sha=$(echo ${{ github.sha }} | cut -c 1-8)

        event_title="${{ github.event.issue.title }}"
        case "${{ github.event.issue.title }}" in
          "") event_title="${{ github.event.pull_request.title }}" ;;
        esac

        echo ::set-output \
          name=event::$event \
          name=event_alt::$event_alt \
          name=event_number::$event_number \
          name=event_sha::$event_sha \
          name=event_url::$issue_url \
          name=event_title::$event_title 

    - name: Notify on PR/push success
      uses: appleboy/telegram-action@master
      if: jobs.build.steps.return.outputs.success
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        format: markdown
        message: |
          * PR #${{ steps.setup.outputs.event_number }} SUCCESS *
          ‚úÖ‚úÖ‚úÖ √í good job broo üòç
          On branch/commit `${{ github.ref }}` by ${{ github.actor }}
          Tested against Node.js ${{ matrix.node-version }}
          SHA: `${{ steps.setup.outputs.event_sha }}`
          Check here for more [detail](${{ steps.setup.outputs.event_url }})
        document: ./res/gifs/love-telegram.gif

    - name: Notify on PR/push failure
      uses: appleboy/telegram-action@master
      if: !jobs.build.steps.return.outputs.success
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        format: markdown
        message: |
          * PR #${{ steps.setup.outputs.event_number }} FLOPPED *
          ‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è Bruh what have u doneeee?
          On branch/commit `${{ github.ref }}` by ${{ github.actor }}
          SHA: `${{ steps.setup.outputs.event_sha }}`
          Tested against Node.js ${{ matrix.node-version }}
          Check here for more [detail](${{ steps.setup.outputs.event_url }})
        document: ./res/gifs/bruh-telegram.gif
